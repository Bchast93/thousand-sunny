---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex
  namespace: media
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/plex
              tag: 1.41.8.9834@sha256:40e620ffcdc65331a0c2a7ed9a95700da7d527244f33c21bd35fc30aa25f19ea
            env:
              TZ: America/Chicago
              PLEX_ADVERTISE_URL: "http://${SVC_PLEX_ADDR}:32400,https://plex.devilfruitlabs.com"
              ALLOWED_NETWORKS: "${LAN_CIDR},${CLUSTER_CIDR},${SERVICE_CIDR}"
              PLEX_PREFERENCE_1: "AllowMediaDeletion=0"
              PLEX_PREFERENCE_2: "EnableIPv6=0"
              PLEX_PREFERENCE_3: "FriendlyName=Jinbe"
              PLEX_PREFERENCE_4: "LanNetworksBandwidth=${LAN_CIDR}"
            envFrom:
              - secretRef:
                  name: *app
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: &port 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                gpu.intel.com/i915: 1
                memory: 16Gi
    defaultPodOptions:
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44]
    service:
      app:
        type: LoadBalancer
        annotations:
          lbipam.cilium.io/ips: ${SVC_PLEX_ADDR}
        ports:
          http:
            port: *port
    route:
      app:
        hostnames: ["{{ .Release.Name }}.devilfruitlabs.com"]
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port
            filters:
              - type: RequestHeaderModifier
                requestHeaderModifier:
                  remove: ["Range"]
            matches:
              - path:
                  type: PathPrefix
                  value: /library/streams
          - backendRefs:
              - identifier: app
                port: *port
    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: "/config/Library/Application Support/Plex Media Server"
      config-cache:
        existingClaim: plex-cache
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache
      logs:
        type: emptyDir
        globalMounts:
          - path: "/config/Library/Application Support/Plex Media Server/Logs"
      tmp:
        type: emptyDir
      transcode:
        type: emptyDir
      movies:
        existingClaim: cifs-movies
        globalMounts:
          - path: /media/movies
      music:
        existingClaim: cifs-music
        globalMounts:
          - path: /media/music
      pictures:
        existingClaim: cifs-pictures
        globalMounts:
          - path: /media/pictures
      tv:
        existingClaim: cifs-tv
        globalMounts:
          - path: /media/tv
      videos:
        existingClaim: cifs-videos
        globalMounts:
          - path: /media/videos
